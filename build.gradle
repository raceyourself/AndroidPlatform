buildscript {
    repositories {
        mavenCentral()
        flatDir { dirs 'proguard' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.1'
        //classpath 'net.sf.proguard:proguard-gradle:4.9'
        classpath ':proguard:'
    }
}

apply plugin: 'android-library'

android {
    
    compileSdkVersion 19
    buildToolsVersion "19.0.0"
    
    defaultConfig {
    	minSdkVersion 15
    	targetSdkVersion 15
	}
    
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
    
    dependencies {
        // from 'Extras' - need to install support repo AND support library for this to work
    	compile 'com.android.support:support-v4:19.0.+'
    	
    	// from 'Extras' - need to install Google Play Services AND Google Repository for these to work
    	// this also pulls in the support-v4 library as a dependency
    	compile 'com.google.android.gms:play-services:4.0.+'
    	
    	// local libraries - everything in our libs directory
    	compile fileTree(dir: 'libs', includes: ['*.jar'], excludes: ['proguard.jar']) 
	}
	
    release {
        runProguard false
        proguardFile 'proguard-glassfit.pro'
        proguardFile 'proguard-play-services.pro'
    }	
	
	task jar(type: Jar, dependsOn: 'build') {
    	from fileTree(dir: 'build/classes/release').matching { 
    		include 'com/**'
    	}
	}
	
	task proguard(type: proguard.gradle.ProGuardTask, dependsOn: 'jar') {
	  ext {
	    outDir = file("build/libs")
	    obfuscatedJar = "${outDir}/${jar.baseName}_proguard.jar"
	  }
	  outDir.mkdirs()
	  
	  injars "build/libs/GlassFitPlatform.jar"
	  outjars obfuscatedJar
	  
	  printmapping "${outDir}/mappings.out"
	  libraryjars configurations.compile
	  configuration 'proguard-glassfit.pro'
	  configuration 'proguard-play-services.pro'
	  
	  // copy to ${buildDir}? (this is the unity project..)
	  
	  doLast {
	    logger.lifecycle "[Proguard] Generated obfuscated JAR in ${obfuscatedJar}"
	  }
	}

/*	
	packagingOptions {
	    // exclude these files as they are present in >1 of the library jars and therefore clash
	    // for this clause to work we need at least gradle-0.7.1
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/MANIFEST.MF'
    }
*/
    
    lintOptions {
      abortOnError false
      
      // some of our libraries were not build with an android JVM and reference classes that are not available
      // luckily we don't use these bits of the libraries so can prevent the build falling over like this:
      disable 'InvalidPackage'
    }
    
}